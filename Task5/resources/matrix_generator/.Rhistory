r = sample(1:21,1)
nd1 = nd
nd1[r] = 10 * nd[r]
#смотрим статистики
summary(nd)
summary(nd1)
summary(myd)
#функция распределения
f <- function(x) {
res = x
for (i in 1:length(res))
{
if (abs(x[i]) < sqrt(3))
{
res[i] = (1/(2*sqrt(3)))*abs(x[i]+sqrt(3))
}
else
{
res[i] = 0
}
}
return (res)
}
#генерация в пределах от -3 до 3
a = runif(21,-3,3)
#вычисляем распределение
nd = rnorm(21,mean = 0, sd = 1)
myd = f(a)
#добавим вброс
r = sample(1:21,1)
nd1 = nd
nd1[r] = 10 * nd[r]
#смотрим статистики
summary(nd)
summary(nd1)
summary(myd)
#функция распределения
f <- function(x) {
res = x
for (i in 1:length(res))
{
if (abs(x[i]) < sqrt(3))
{
res[i] = (1/(2*sqrt(3)))*(x[i]+sqrt(3))
}
else
{
res[i] = 0
}
}
return (res)
}
#генерация в пределах от -3 до 3
a = runif(21,-3,3)
#вычисляем распределение
nd = rnorm(21,mean = 0, sd = 1)
myd = f(a)
#добавим вброс
r = sample(1:21,1)
nd1 = nd
nd1[r] = 10 * nd[r]
#смотрим статистики
summary(nd)
summary(nd1)
summary(myd)
(max(nd) + min(nd))/2
(max(nd1) + min(nd1))/2
summary(nd)
(max(nd) + min(nd))/2
summary(nd1)
(max(nd1) + min(nd1))/2
summary(myd)
(max(myd) + min(myd))/2
var(nd)
var(nd1)
var(myd1)
var(myd)
summary(myd)
(max(myd) + min(myd))/2
myd = runif(21,-sqrt(3),sqrt(3))
summary(nd1)
(max(nd1) + min(nd1))/2
summary(myd)
(max(myd) + min(myd))/2
summary(nd1) # норм с грязью
(max(nd1) + min(nd1))/2
max_derivative = 1/cos(pi/4)^2 -1.5;
max_derivative = 1/cos(pi/3)^2 -1.5;
library("dplyr") # манипуляции с данными
l
library("dplyr") # манипуляции с данными
max_derivative = 1/cos(pi/3)^2 -1.5;
alpha = 2/max_derivative * 0.9;
eps = 0.0001;
f <- function(x){
return tan(x) - 1.5*x;
}
return tg(x) - 1.5*x;
f <- function(x){
return tg(x) - 1.5*x;
}
f <- function(x){
return tan(x) - 1.5*x;
}
f <- function(x){
return tan(x) - 1.5*x;
}
f <- function(x){
return (tan(x) - 1.5*x);
}
phi <- function(x){
return (x - alpha * f(x));
}
x_prev = pi/4;
x_new = phi(x);
x_new = phi(x);
x_new = phi(x_prev);
while (abs(x_new-x_prev) < alpha/(1-alpha) * eps){
x_prev = x_new;
x_new = phi(x);
}
x_new
while (abs(x_new-x_prev) < alpha/(1-alpha) * eps){
x_prev = x_new;
x_new = phi(x);
}
x_prev = pi/4;
x_new = phi(x_prev);
while (abs(x_new-x_prev) > alpha/(1-alpha) * eps){
x_prev = x_new;
x_new = phi(x);
}
x_new
tg(x_new) - 1.5*x_nrw
tg(x_new) - 1.5*x_new
tan(x_new) - 1.5*x_new
while (abs(x_new-x_prev) >eps){
x_prev = x_new;
x_new = phi(x);
}
x_prev = pi/4;
x_new = phi(x_prev);
while (abs(x_new-x_prev) >eps){
x_prev = x_new;
x_new = phi(x);
}
while (abs(x_new-x_prev) >eps){
x_prev = x_new;
x_new = phi(x_prev);
}
while (abs(x_new-x_prev) >eps){
x_prev = x_new;
x_new = phi(x_prev);
}
x_prev = pi/4;
x_new = phi(x_prev);
while (abs(x_new-x_prev) >eps){
x_prev = x_new;
x_new = phi(x_prev);
}
while (abs(x_new-x_prev) >eps){
x_prev = x_new;
x_new = phi(x_prev);
}
while (abs(x_new-x_prev) > alpha /(1-alpha) * eps){
x_prev = x_new;
x_new = phi(x_prev);
}
x_prev = pi/4;
x_new = phi(x_prev);
while (abs(x_new-x_prev) > alpha /(1-alpha) * eps){
x_prev = x_new;
x_new = phi(x_prev);
}
x_new
f(x_new)
cls
clrscr
x = 5
x = pi/3
max_derivative = 1/cos(x)^2 - 1.5
max_derivative
alpha = (2/ max_derivative ) *0.9
alpha
f <- function(x){
return (tan(x) - 1.5*x)
}
f(pi/4)
phi <- function(x){
return (x - alpha*f(x))
}
phi(1)
x_prev = pi/4
x_new = phi(x_prev)
x_new
min_derivative = 1/cos(pi/4)^2 - 1.5
q = 1 - alpha*min_derivative
while ( abs(x_new -x_prev) > q/(1-q) * eps)
{
x_prev = x_new
x_new = phi(x)
}
eps = 0.001
while ( abs(x_new -x_prev) > q/(1-q) * eps)
{
x_prev = x_new
x_new = phi(x)
}
x_new
while ( abs(x_new -x_prev) > q/(1-q) * eps)
{
x_prev = x_new
x_new = phi(x_prev)
}
x_new
x_prev = pi/4
x_new = phi(x_prev)
while ( abs(x_new -x_prev) > q/(1-q) * eps)
{
x_prev = x_new
x_new = phi(x_prev)
}
x_new
x_prev = pi/4
x_new = phi(x_prev)
i = 1;
while ( abs(x_new -x_prev) > q/(1-q) * eps)
{
x_prev = x_new
x_new = phi(x_prev)
i = i+1
}
i
x_prev = pi/4
x_new = phi(x_prev)
eps = 0.0000001
i = 1;
while ( abs(x_new -x_prev) > q/(1-q) * eps)
{
x_prev = x_new
x_new = phi(x_prev)
i = i+1
}
i
x_new
distr <- rnorm(100,mean = 0, sd = 1)
sd(distr)
x1 <- density(distr, bw = sd(distr)/(100)^(1/5))
x2 <- density(distr, bw = 2*sd(distr)/(100)^(1/5))
x3 <- density(distr, bw = 0.5*sd(distr)/(100)^(1/5))
qplot(x1)
library("ggplot2")
qplot(x1)
plot(x,y)
plot(x1.x,x2.y)
plot(x1->x,x2.y)
plot(x1[x],x1[y])
plot(x1["x"],x1["y"])
x1["x"]
x1["y"]
plot(x1["x"],x1["y"])
x1["x"][1]
x1["x"]
x = x1["x"]
x[1]
x[2]
plot(x1)
plot(x1)
plot(x2)
plot(x3)
qplot(x1$x)
qplot(x1$x)
qplot(x1$y)
plot(x1$x,x1$y)
plot(x1$x,x1$y,type="l",col="red")
lines(x2$x,x2$y,col="green")
lines(x3$x,x3$y,col="blue")
lines(distr,col="green")
lines(distr, qnorm(distr),col="green")
plot(x1$x,x1$y,type="l",col="red")
lines(distr, qnorm(distr),col="green")
lines(distr, dnorm(distr),col="green")
plot(x1$x,x1$y,type="l",col="red")
lines(distr, dnorm(distr),col="green")
sort(distr)
lines(sort(distr), dnorm(sort(distr)),col="green")
plot(x1$x,x1$y,type="l",col="red")
lines(sort(distr), dnorm(sort(distr)),col="green")
par(mfrow=c(2,2))
plot(sort(distr), dnorm(sort(distr)),type="l",col="red")
lines(x1$,col="green")
lines(x1$x,x1$y,col="green")
par(mfrow=c(2,2))
plot(sort(distr), dnorm(sort(distr)),type="l",col="red")
lines(x1$x,x1$y,col="green")
plot(sort(distr), dnorm(sort(distr)),type="l",col="red")
lines(x2$x,x2$y,col="blue")
plot(sort(distr), dnorm(sort(distr)),type="l",col="red")
lines(x3$x,x3$y,col="orange")
plot(sort(distr), dnorm(sort(distr)),"x","f(x)",type="l",col="red")
lines(x1$x,x1$y,col="green")
x1 <- density(distr, bw = sd(distr)/(100)^(1/5))
x2 <- density(distr, bw = 2*sd(distr)/(100)^(1/5))
x3 <- density(distr, bw = 0.5*sd(distr)/(100)^(1/5))
par(mfrow=c(2,2))
plot(sort(distr), dnorm(sort(distr)),type="l",col="red")
lines(x1$x,x1$y,col="green")
plot(sort(distr), dnorm(sort(distr)),type="l",col="red")
lines(x2$x,x2$y,col="blue")
plot(sort(distr), dnorm(sort(distr)),type="l",col="red")
lines(x3$x,x3$y,col="orange")
?lm
help(vector)
?data
1+1
5+6
a = 5
A = 7
a + A
moe_chislo = 6
b <- 1
b -> 3
3 -> b
4 -> b
y = c(1,5,6)
x = c(1,NA,7)
y+x
0/0
1/0
Inf +3
Inf/Inf
atan(inf)
atan(Inf)
pi/2
x < - c(23,123,123)
y <- c(5,6,NA)
x <- c(23,123,123)
y <- c(5,6,NA)
mean(x)
mean(y)
mean(y,na.rm = true)
mean(y,na.rm = TRUE)
d <- data.frame(rost = x, ves = y)
d[3,1]
d[,1]
d[1,]
d$rost
help(lm)
?lm
#вычисляем распределение
nd = rnorm(21,mean = 0, sd = 1)
myd = runif(21,-sqrt(3),sqrt(3))
#добавим вброс
r = sample(1:21,1)
nd1 = nd
nd1[r] = 10 * nd[r]
semisum = function (x)
{
return ((min(x)+max(x))/2)
}
semisum(nd)
table <- data.frame(
means = c(mean(nd),mean(myd),mean(nd1)),
medians = c(median(nd),median(myd),median(nd1))
semisums =  semisum(nd),semisum(myd),semisum(nd1))
table <- data.frame(
means = c(mean(nd),mean(myd),mean(nd1)),
medians = c(median(nd),median(myd),median(nd1)),
semisums =  semisum(nd),semisum(myd),semisum(nd1))
View(table)
table <- data.frame(
means = c(mean(nd),mean(myd),mean(nd1)),
medians = c(median(nd),median(myd),median(nd1)),
semisums =  semisum(nd),semisum(myd),semisum(nd1),
variance = c(var(nd),var(myd),var(nd1)))
table
table <- data.frame(
means = c(mean(nd),mean(myd),mean(nd1)),
medians = c(median(nd),median(myd),median(nd1)),
semisums =  c(semisum(nd),semisum(myd),semisum(nd1)),
variance = c(var(nd),var(myd),var(nd1)))
table
library("memisc")
mtable(table)
mtable(table)
mtable(table,summary)
View(table)
boxplot(nd)
boxplot(nd,horizontal = TRUE)
par(mfrow = c(2,2))
boxplot(nd,horizontal = TRUE)
boxplot(nd,horizontal = TRUE)
boxplot(nd,horizontal = TRUE)
par(mfrow = c(2,2))
boxplot(nd,horizontal = TRUE)
boxplot(myd,horizontal = TRUE)
boxplot(nd1,horizontal = TRUE)
par(mfrow = c(2,2))
boxplot(nd,horizontal = TRUE)
boxplot(myd,horizontal = TRUE)
boxplot(nd1,horizontal = TRUE)
boxplot(nd,myd,myd1horizontal = TRUE)
boxplot(nd,myd,myd1,horizontal = TRUE)
boxplot(nd,myd,myd1,horizontal = TRUE)
boxplot(nd,myd,nd1,horizontal = TRUE)
boxplot(nd,myd,nd1)
boxplot(nd,myd,nd1, "Нормальное")
boxplot(nd,myd,nd1, names = "Normal")
boxplot(nd,myd,nd1, names = c("Normal"))
boxplot(nd,myd,nd1)
boxplot(nd,myd,nd1,)
###
boxplot(nd,myd,nd1)
9, 0, 1, 2),ncol = 3)
a = data(c(1, 2.2, 5 5,
9, 1, 4, 4,
8, 6, 7, 9,
9, 0, 1, 2),ncol = 3)
a = data(c(1, 2.2, 5, 5,
9, 1, 4, 4,
8, 6, 7, 9,
9, 0, 1, 2),ncol = 4)
b = data(c(1, 3, 1,
0, 8, 2,
9, 1, 2,
9, 3, 7), ncol = 3)
a%*%b
View(a)
View(b)
t(a)%*%t(b)
t(a)%*%t(b)
a = data(c(1, 2.2, 5, 5,
9, 1, 4, 4,
8, 6, 7, 9,
9, 0, 1, 2),ncol = 4)
A1 <- data(runif(10*20), nrow = 10, ncol=20)
B1 <- data(runif(10*20), nrow = 20,ncol=10)
C1 = A1%*%B1
write(A1, file = "A1.txt", sep = " " , ncolumns = ncol(A1))
write(B1, file = "B1.txt", sep = " ",ncolumns = ncol(B1))
write(C1, file = "C1.txt", sep = " ", ncolumns = ncol(C1))
View(`A1`)
setwd("~/")
setwd("~/Desktop/Java/Tasks/Task5/matrix_generator")
write(A1, file = "A1.txt", sep = " " , ncolumns = ncol(A1))
write(A1, file = "A1.txt", sep = " " , ncolumns = ncol(A1))
write(A1, file = "A1.txt", sep = " " , ncolumns = ncol(A1))
write(B1, file = "B1.txt", sep = " ",ncolumns = ncol(B1))
write(C1, file = "C1.txt", sep = " ", ncolumns = ncol(C1))
View(`C1`)
write(t(C1), file = "C1.txt", sep = " ", ncolumns = ncol(C1))
#Random data generation
library("dplyr")
A1 <- data(runif(10*20), nrow = 10, ncol=20)
B1 <- data(runif(10*20), nrow = 20,ncol=10)
C1 = A1%*%B1
A2 <- data(runif(100*200), nrow = 100, ncol=200)
B2 <- data(runif(100*200), nrow = 200,ncol=100)
C2 = A2%*%B2
A3 <- data(runif(1000*2000), nrow = 1000, ncol=2000)
B3 <- data(runif(1000*2000), nrow = 2000,ncol=1000)
C3 = A3%*%B3
glimpse(C3)
write(t(A1), file = "A1.txt", sep = " " , ncolumns = ncol(A1))
write(t(B1), file = "B1.txt", sep = " ",ncolumns = ncol(B1))
write(t(C1), file = "C1.txt", sep = " ", ncolumns = ncol(C1))
write(t(A2), file = "A2.txt", sep = " ",ncolumns = ncol(A2))
write(t(B2), file = "B2.txt", sep = " ",ncolumns = ncol(B2))
write(t(C2), file = "C2.txt", sep = " ",ncolumns = ncol(C2))
write(t(A3), file = "A3.txt", sep = " ",ncolumns = ncol(A3))
write(t(B3), file = "B3.txt", sep = " ",ncolumns = ncol(B3))
write(t(C3), file = "C3.txt", sep = " ",ncolumns = ncol(C3))
View(`B2`)
View(`B1`)
a = data( c(1, 2, 3, 4) , ncol = 2)
a = data( c(5, 6, 7, 8) , ncol = 2)
a = data( c(1, 2, 3, 4) , ncol = 2)
b = data( c(5, 6, 7, 8) , ncol = 2)
a%*%b
t(a)%*%t(b)
A1 <- data(runif(10*20), 10,20)
View(`A1`)
write(t(A1), file = "A1.txt", sep = " " , ncolumns = ncol(A1))
View(`A1`)
write.data(A1, file = "A1.txt", sep = " " , ncolumns = ncol(A1))
library("MASS")
write.data(A1, file = "A1.txt", sep = " " , ncolumns = ncol(A1))
write.data(A1, file = "A1.txt", sep = " ")
View(`A1`)
write.data(A1, file = "A1.txt", sep = " ")
write.data(B1, file = "B1.txt", sep = " ")
write.data(C1, file = "C1.txt", sep = " ")
View(`C1`)
A1 <- data(runif(10*20), nrow = 10, ncol= 20)
B1 <- data(runif(10*20), nrow = 20,ncol=10)
C1 = A1%*%B1
write.data(A1, file = "A1.txt", sep = " ")
write.data(B1, file = "B1.txt", sep = " ")
write.data(C1, file = "C1.txt", sep = " ")
View(`C1`)
A2 <- data(runif(100*200), nrow = 100, ncol=200)
B2 <- data(runif(100*200), nrow = 200,ncol=100)
C2 = A2%*%B2
A3 <- data(runif(1000*2000), nrow = 1000, ncol=2000)
B3 <- data(runif(1000*2000), nrow = 2000,ncol=1000)
C3 = A3%*%B3
write.data(A2, file = "A2.txt", sep = " ")
write.data(B2, file = "B2.txt", sep = " ")
write.data(C2, file = "C2.txt", sep = " ")
write.data(A3, file = "A3.txt", sep = " ")
write.data(B3, file = "B3.txt", sep = " ")
write.data(C3, file = "C3.txt", sep = " ")
